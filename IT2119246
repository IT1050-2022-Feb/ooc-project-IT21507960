#include <iostream>
#include <cstring>


using namespace std;



class Employee
{
	protected:
		char eName[35];
		char eAddress[50];
		char NIC[15];
		char Email[35];
		int contactNo;
	public:
		Employee();
		Employee(char pName[],char pAddress[],char pNIC[],char pEmail[],int pcontactNo);
		void checkEmpDetails();
		void displayDetails();
		
};


Employee::Employee() 
{
	strcpy(eName, "");
	strcpy(eAddress, "");
	strcpy(NIC, "");
	strcpy(Email, "");
	contactNo = 0;
}

Employee::Employee(char pName[],char pAddress[],char pNIC[],char pEmail[], int pcontactNo)
{
	strcpy(eName, pName);
	strcpy(eAddress, pAddress);
	strcpy(NIC, pNIC);
	strcpy(Email, pEmail);
	contactNo = pcontactNo;
}

void Employee::checkEmpDetails()
{
	
}

void Employee::displayDetails()
{

}


class Agent :public Employee
{
private:
	int AID;

public:
	Agent();
	Agent(char pName[],char pAddress[],char pNIC[],char pEmail[],int pcontactNo,int pAID);
	float payRenter();
	float payDriver();
	int trackRoute();
	
};

class Driver :public Employee
{
private:
	int DID;
	int bankAccountNo;
	char licenceNo[15];
	

public:
	Driver();
	Driver(char pName[],char pAddress[],char pNIC[],char pEmail[],int pcontactNo,int pDID,int pbankAccountNo, char plicenceNo[]);
	void checkNotification();
	void confirmCustRrequest();
	
};

Agent::Agent()
{
	AID = 0;
}

Agent::Agent(char pName[],char pAddress[],char pNIC[],char pEmail[], int pcontactNo,int cAID) 
:Employee(pName, pAddress, pNIC, pEmail, pcontactNo)
{
	AID = cAID;
}

float Agent::payRenter()
{
	return 0.0;
}

float Agent::payDriver()
{
	return 0.0;
}


int Agent::trackRoute()
{
	return 0;
}



Driver::Driver()
{
	DID = 0;
	bankAccountNo = 0;
	strcpy(licenceNo, "");
	
}

Driver::Driver(char pName[],char pAddress[],char pNIC[],char pEmail[], int pcontactNo, int pDID, int pbankAccountNo, char plicenceNo[] )
:Employee( pName, pAddress, pNIC, pEmail, pcontactNo)
{
	DID = pDID;
	bankAccountNo = pbankAccountNo;
	strcpy(licenceNo, plicenceNo);
	
}


//extracted reservation class from dependency relationship of driver (IT21048746)
void Driver::confirmCustRrequest(Reservation *R)
{
R->confirmReservation();
}
void Driver::checkNotification()
{

}


int main()
{
	Employee* E1 = new Employee();
	Driver* D1 = new Driver();
	Agent* A1 = new Agent();

	return 0;
}
